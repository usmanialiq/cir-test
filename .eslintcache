[{"C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\views\\Trends\\index.jsx":"1","C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\App.js":"2","C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\views\\Live\\index.jsx":"3","C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\components\\GaugeGraph\\index.jsx":"4","C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\components\\LineGraph\\index.jsx":"5","C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\components\\ScatterGraph\\index.jsx":"6"},{"size":1618,"mtime":1611556745455,"results":"7","hashOfConfig":"8"},{"size":1123,"mtime":1611556056555,"results":"9","hashOfConfig":"8"},{"size":3325,"mtime":1611558091993,"results":"10","hashOfConfig":"8"},{"size":703,"mtime":1611515490486,"results":"11","hashOfConfig":"8"},{"size":1186,"mtime":1611516606711,"results":"12","hashOfConfig":"8"},{"size":1217,"mtime":1611558234225,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1pz718n",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\views\\Trends\\index.jsx",["28"],"import React, {useState, useEffect} from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nfunction ScatterGraph() {\r\n    const [plot, setPlot] = useState([\r\n        ['Value Min', 'Value Max'],\r\n    ]);\r\n    useEffect(() => {\r\n        randomData();\r\n    }, []);\r\n    const randomData = () => {\r\n        let data  = plot;\r\n        let arr = Array.from({length: 1000}, () => [Math.floor(Math.random() * 10000), Math.floor(Math.random() * 7000)]);\r\n        arr = data.concat(arr);\r\n        if(plot.length > 1000) {\r\n            arr[0] = [\"Value Min\", \"Value Max\"];\r\n            arr = arr.splice(0, 1000);\r\n            setPlot(arr);\r\n        }\r\n        else {\r\n            setPlot(arr);\r\n        }\r\n        console.log(\"Since React Google Graph was not able to handle 100,00 values, /n so I just switched to 1000 instead for better plotting\", plot.length)\r\n    }\r\n    return (\r\n        <div>\r\n            <button \r\n                className=\"btn btn-primary\"\r\n                onClick={() => randomData()}>Generate Random Data</button>\r\n            <Chart \r\n                width={\"900px\"}\r\n                height={\"500px\"}\r\n                chartType=\"ScatterChart\"\r\n                loader={<div>Loading Line Chart</div>}\r\n                data={plot}\r\n                options={{\r\n                    title: \"Min Value Vs Max Value\",\r\n                    hAxis: { title: \"Min Value\" },\r\n                    vAxis: { title: \"Max Value\" },\r\n                    legend: \"none\"\r\n                }}\r\n                rootProps={{ \"data-testid\": 1 }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScatterGraph;",["29","30"],"C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\App.js",[],"C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\views\\Live\\index.jsx",[],"C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\components\\GaugeGraph\\index.jsx",[],"C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\components\\LineGraph\\index.jsx",[],"C:\\Users\\Usman\\Desktop\\projects\\cir-test\\src\\components\\ScatterGraph\\index.jsx",[],{"ruleId":"31","severity":1,"message":"32","line":9,"column":8,"nodeType":"33","endLine":9,"endColumn":10,"suggestions":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'randomData'. Either include it or remove the dependency array.","ArrayExpression",["39"],"no-native-reassign",["40"],"no-negated-in-lhs",["41"],{"desc":"42","fix":"43"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [randomData]",{"range":"44","text":"45"},[263,265],"[randomData]"]